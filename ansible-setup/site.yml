---
- hosts: web_servers
  become: true 
  tasks:
    - name: Pull Docker Images
      docker_image:
        name: "{{ item }}"
        source: pull
      with_items:
        - ujusophy/frontend:latest
        - ujusophy/backend:latest
        - ujusophy/postgres:latest
        - ujusophy/adminer:latest
        - ujusophy/nginx:latest

    - name: Copy ENV file
      copy:
        content: |
          COMPOSE_FILE=docker-compose.yml:docker-compose.app.yml
        dest: ./.env

    - name: Copy Nginx Configuration for Routing
      copy:
        content: |
          events {
              worker_connections 1024;
          }

          http {
              server {
                  listen 80;
                  server_name _;

                  location / {
                      proxy_pass http://frontend:5173;
                      proxy_set_header Host $host;
                      proxy_set_header X-Real-IP $remote_addr;
                      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                      proxy_set_header X-Forwarded-Proto $scheme;
                  }

                  location /api {
                      proxy_pass http://backend:8000;
                      proxy_set_header Host $host;
                      proxy_set_header X-Real-IP $remote_addr;
                      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                      proxy_set_header X-Forwarded-Proto $scheme;
                  }

                  location /docs {
                      proxy_pass http://backend:8000;
                      proxy_set_header Host $host;
                      proxy_set_header X-Real-IP $remote_addr;
                      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                      proxy_set_header X-Forwarded-Proto $scheme;
                  }

                  location /grafana/ {
                      proxy_pass http://grafana:3000;
                      proxy_set_header Host $host;
                      proxy_set_header X-Real-IP $remote_addr;
                      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                      proxy_set_header X-Forwarded-Proto $scheme;
                  }

                  location /prometheus/ {
                      proxy_pass http://prometheus:9090;
                      proxy_set_header Host $host;
                      proxy_set_header X-Real-IP $remote_addr;
                      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                      proxy_set_header X-Forwarded-Proto $scheme;
                  }
              }

              server {
                  listen 80;
                  server_name db.localhost;

                  location / {
                      proxy_pass http://adminer:8080;
                  }
              }
          }
        dest: ./nginx.conf

    - name: Copy Docker Compose File
      copy:
        content: |
          version: '3.8'
          services:
            frontend:
              image: ujusophy/frontend:latest
              container_name: frontend
              ports:
                - "5173:5173"
              networks:
                - monitoring-network
            backend:
              image: ujusophy/backend:latest
              container_name: backend
              ports:
                - "8000:8000"
              networks:
                - monitoring-network
            postgres:
              image: ujusophy/postgres:latest
              container_name: postgres
              environment:
                POSTGRES_PASSWORD: your_password
              ports:
                - "5432:5432"
              networks:
                - monitoring-network
            adminer:
              image: ujusophy/adminer:latest
              container_name: adminer
              ports:
                - "8080:8080"
              networks:
                - monitoring-network
            nginx:
              image: ujusophy/nginx:latest
              container_name: nginx
              volumes:
                - ./nginx.conf:/etc/nginx/nginx.conf
              ports:
                - "80:80"
                - "443:443"
              networks:
                - monitoring-network
            
        dest: ./docker-compose.app.yml

    - name: Start Docker Compose Stack
      command: docker compose up -d
      args:
        chdir: ./
